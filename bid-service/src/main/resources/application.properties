spring.application.name=bid-service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/db
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
server.port=0
eureka.instance.hostname=localhost


#Kafka Properties
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.reverseauction.bidservice.event.BidPlacedEvent
logging.level.org.apache.kafka.clients.producer=DEBUG
logging.level.org.springframework.kafka=DEBUG
logging.level.org.apache.kafka=INFO

# Consumer config (required for your @KafkaListener)
spring.kafka.consumer.group-id=bid-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Tell Spring Kafka how to deserialize JSON into your class
spring.kafka.consumer.properties.spring.json.value.default.type=com.reverseauction.bidservice.event.ProductDeletedEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=com.reverseauction.bidservice.event